2007-03-16  Jakub Bogusz  <qboosh at pld-linux dot org>

	* backends/alpha_init.c: Add register_info and machine_section_flag_check hooks.
	* backends/alpha_regs.c: New file.
	* backends/alpha_symbol.c: (alpha_machine_section_flag_check) New function.
	* backends/Makefile.am: Add alpha_regs.c.

--- elfutils-0.126/backends/alpha_init.c.orig	2006-07-05 06:09:28.000000000 +0200
+++ elfutils-0.126/backends/alpha_init.c	2006-07-22 10:34:36.417909750 +0200
@@ -54,6 +54,8 @@
   HOOK (eh, dynamic_tag_check);
   HOOK (eh, reloc_simple_type);
   HOOK (eh, return_value_location);
+  HOOK (eh, machine_section_flag_check);
+  HOOK (eh, register_info);
   eh->sysvhash_entrysize = sizeof (Elf64_Xword);
 
   return MODVERSION;
--- elfutils-0.124/backends/alpha_regs.c.orig	1970-01-01 01:00:00.000000000 +0100
+++ elfutils-0.124/backends/alpha_regs.c	2006-11-16 21:29:16.824457750 +0100
@@ -0,0 +1,91 @@
+/* Register names and numbers for ALPHA DWARF.
+   Based on i386_regs.c, Copyright (C) 2005 Red Hat, Inc.
+   This file is part of Red Hat elfutils.
+
+   Red Hat elfutils is free software; you can redistribute it and/or modify
+   it under the terms of the GNU General Public License as published by the
+   Free Software Foundation; version 2 of the License.
+
+   Red Hat elfutils is distributed in the hope that it will be useful, but
+   WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   General Public License for more details.
+
+   You should have received a copy of the GNU General Public License along
+   with Red Hat elfutils; if not, write to the Free Software Foundation,
+   Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301 USA.
+
+   Red Hat elfutils is an included package of the Open Invention Network.
+   An included package of the Open Invention Network is a package for which
+   Open Invention Network licensees cross-license their patents.  No patent
+   license is granted, either expressly or impliedly, by designation as an
+   included package.  Should you wish to participate in the Open Invention
+   Network licensing program, please visit www.openinventionnetwork.com
+   <http://www.openinventionnetwork.com>.  */
+
+#ifdef HAVE_CONFIG_H
+# include <config.h>
+#endif
+
+#include <string.h>
+#include <dwarf.h>
+
+#define BACKEND alpha_
+#include "libebl_CPU.h"
+
+ssize_t
+alpha_register_info (Ebl *ebl __attribute__ ((unused)),
+		    int regno, char *name, size_t namelen,
+		    const char **prefix, const char **setname,
+		    int *bits, int *type)
+{
+  if (name == NULL)
+    return 33;
+
+  if (regno < 0 || regno > 64 || namelen < 5)
+    return -1;
+
+  *prefix = "%";
+  *bits = 64;
+  if (regno < 32) {
+    *setname = "integer";
+    if (regno == 26 || regno == 29 || regno == 30) /* ra,gp,sp in alpha ABI */
+      *type = DW_ATE_address;
+    else
+      *type = DW_ATE_signed;
+  } else if (regno < 64) {
+    *setname = "fp";
+    *type = DW_ATE_float;
+  } else {
+    *setname = "pc";
+    *type = DW_ATE_address;
+  }
+
+  switch (regno)
+    {
+      static const char *alpharegs[] =
+	{
+	  "v0", "t0", "t1", "t2", "t3", "t4", "t5", "t6",
+	  "t7", "s0", "s1", "s2", "s3", "s4", "s5", "s6",
+	  "a0", "a1", "a2", "a3", "a4", "a5", "t8", "t9",
+	  "t10","t11","ra", "t12","at", "gp", "sp", "zero",
+	  "fv0","fv1","fs0","fs1","fs2","fs3","fs4","fs5",
+	  "fs6","fs7","ft0","ft1","ft2","ft3","ft4","ft5",
+	  "fa0","fa1","fa2","fa3","fa4","fa5","ft6","ft7",
+	  "ft8","ft9","ft10","ft11","ft12","ft13","ft14","fzero",
+	  "pc"
+	};
+
+    case 0 ... 64:
+      strcpy(name, alpharegs[regno]);
+      namelen = strlen(name);
+      break;
+
+    default:
+      name[0] = '\0';
+      *setname = NULL;
+      return 0;
+    }
+
+  return namelen;
+}
--- elfutils-0.126/backends/alpha_symbol.c.orig	2006-04-13 17:04:56.000000000 +0200
+++ elfutils-0.126/backends/alpha_symbol.c	2007-03-16 20:11:35.167246761 +0100
@@ -55,6 +55,13 @@
   return tag == DT_ALPHA_PLTRO;
 }
 
+/* Check whether SHF_MASKPROC flags are valid.  */
+bool
+alpha_machine_section_flag_check (GElf_Xword sh_flags)
+{
+  return (sh_flags &~ SHF_ALPHA_GPREL) == 0;
+}
+
 /* Check for the simple reloc types.  */
 Elf_Type
 alpha_reloc_simple_type (Ebl *ebl __attribute__ ((unused)), int type)
--- elfutils-0.120/backends/Makefile.am.orig	2006-04-16 13:15:56.425192000 +0200
+++ elfutils-0.120/backends/Makefile.am	2006-04-16 13:28:26.928096250 +0200
@@ -90,7 +90,7 @@
 libebl_ia64_pic_a_SOURCES = $(ia64_SRCS)
 am_libebl_ia64_pic_a_OBJECTS = $(ia64_SRCS:.c=.os)
 
-alpha_SRCS = alpha_init.c alpha_symbol.c alpha_retval.c
+alpha_SRCS = alpha_init.c alpha_symbol.c alpha_retval.c alpha_regs.c
 libebl_alpha_pic_a_SOURCES = $(alpha_SRCS)
 am_libebl_alpha_pic_a_OBJECTS = $(alpha_SRCS:.c=.os)
 
